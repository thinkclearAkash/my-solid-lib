import type { ComponentsTypes } from "./components-types";
import { DeepPartial, InferPropsType } from "@suid/types";
export type Components = ComponentsOptions & {};
export type ComponentName = keyof ComponentsTypes;
export type PickThemeComponent<N extends ComponentName> = ComponentsTypes[N];
export type PickThemeComponentProps<N extends ComponentName> = InferPropsType<PickThemeComponent<N>>;
export type ComponentsOptions = {
    [C in keyof ComponentsTypes]?: {
        defaultProps?: Partial<PickThemeComponentProps<C>>;
    };
};
export declare const componentsDefault: ComponentsOptions;
export declare function createComponentsOptions(options: ComponentsOptions): ComponentsOptions;
export declare function createComponents(data?: DeepPartial<ComponentsOptions>): Components;
//# sourceMappingURL=createComponents.d.ts.map