import { memo as m, createComponent as u, mergeProps as h } from "solid-js/web";
import { createSignal as n, createEffect as g } from "solid-js";
import { Selector as z } from "../Selector/index.js";
import { SelectorTriggerButton as I } from "../SelectorTriggerButton/index.js";
import { getYearRange as N } from "../../utils/time.js";
import { breakArrayIntoSubArrays as R, generateYearsArray as b, currentYear as d } from "../../utils/generate.js";
const E = (r) => {
  const [f, S] = n(""), [T, w] = n([]), [a, s] = n(), [o, p] = n(), [y, v] = n(20);
  g(() => {
    if (r.yearSelectorType === "compact-dropdown")
      return;
    const { range: e, array: t, endYear: i, startYear: A } = N({ startYear: a(), endYear: o(), count: y(), year: r.year(), yearRange: r.yearRange });
    S(e), w(R(t, 4)), s(A), p(i);
  }), g(() => {
    r.yearSelectorType !== "compact-dropdown" && r.showSelectorTwo && (r.showSelectorTwo() || (s(), p()));
  });
  const Y = () => {
    if (!a() || !o())
      return;
    const e = o();
    s(e + 1), p(e + y());
  }, x = () => {
    if (!a() || !o())
      return;
    const e = a();
    p(e - 1), s(e - y());
  }, C = () => {
    var e, t;
    (e = r.setSelectorTwoProps) == null || e.call(r, { ...r, optionsArray: [], yearArray: T, option: r.year, setOption: r.setYear, ref: r.ref, attributes: { "data-year": "true" }, handleNext: Y, handlePrev: x, range: f, className: "year-selector-option", zIndex: r.zIndex, primaryTextColor: r.primaryTextColor, primaryColor: r.primaryColor, useValueAsName: !0, startYear: a, endYear: o, count: y }), (t = r.setShowSelectorTwo) == null || t.call(r, !0);
  };
  return m((l = m(() => r.yearSelectorType === "compact-dropdown"), () => l() ? u(z, h(r, { get optionsArray() {
    var e, t;
    return b(((e = r.yearRange) == null ? void 0 : e.start) || d - 51, ((t = r.yearRange) == null ? void 0 : t.end) || d + 20).map((i) => i.toString());
  }, get option() {
    return r.year;
  }, get setOption() {
    return r.setYear;
  }, ref(e) {
    var t = r.ref;
    typeof t == "function" ? t(e) : r.ref = e;
  }, attributes: { "data-year": "true" }, useValueAsName: !0, className: "year-selector-option", get zIndex() {
    return r.zIndex;
  }, get primaryColor() {
    return r.primaryColor;
  }, get primaryTextColor() {
    return r.primaryTextColor;
  } })) : u(I, { get option() {
    return r.year;
  }, optionsArray: [], type: "full-size", get isOpen() {
    var e;
    return ((e = r.showSelectorTwo) == null ? void 0 : e.call(r)) || !1;
  }, onClick: C, get children() {
    return r.year();
  } })));
  var l;
};
export {
  E as YearSelector
};
