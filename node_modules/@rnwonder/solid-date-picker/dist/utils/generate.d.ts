import { DateObjectUnits, DatePickerOnChange, DatePickerType, MonthDaysObject, MonthStatus, Locale, MakeOptionalRequired } from "../interface/general";
import { Setter } from "solid-js";
export declare const getMonthDaysArray: (month: number, year: number, option?: {
    weekStartDay?: number;
}) => MonthDaysObject[];
export declare const getToday: () => MakeOptionalRequired<DateObjectUnits>;
export declare function generateYearsArray(startYear: number, endYear: number): number[];
export declare const currentYear: number;
export declare const getDatePickerRefactoredMonth: (month: number, monthStatus: MonthStatus) => number;
export declare const getDatePickerRefactoredYear: (year: number, month: number, monthStatus: MonthStatus) => number;
export declare const getRefactoredPrevDate: (year: number, month: number) => {
    year: number;
    month: number;
};
export declare const getRefactoredNextDate: (year: number, month: number) => {
    year: number;
    month: number;
};
export declare const getMonthName: (month: number, format?: "narrow" | "long" | "short", locale?: Locale) => string;
export declare function breakArrayIntoSubArrays(array: Array<any>, maxSize: number): any[][];
export declare const getOnChangeSingleData: ({ startDay, month, year, type, setStartDay, }: {
    month?: number | undefined;
    year?: number | undefined;
    type: DatePickerType;
    startDay?: DateObjectUnits | undefined;
    setStartDay?: Setter<DateObjectUnits | undefined> | undefined;
}) => DatePickerOnChange | null;
export declare const clickOutside: (ref: HTMLElement, callback: (e: MouseEvent) => void) => void;
