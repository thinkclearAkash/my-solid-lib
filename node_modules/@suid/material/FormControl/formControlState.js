import { batch, createComputed } from "solid-js";
import { createMutable } from "solid-js/store";
export default function formControlState(data) {
    const compose = () => {
        return data.states.reduce((acc, state) => {
            acc[state] = data.props[state];
            if (data.muiFormControl) {
                if (typeof data.props[state] === "undefined") {
                    acc[state] = data.muiFormControl[state];
                }
            }
            return acc;
        }, {});
    };
    const object = createMutable({});
    createComputed(() => {
        const newObject = compose();
        batch(() => {
            for (const key in newObject) {
                if (object[key] !== newObject[key])
                    object[key] = newObject[key];
            }
            const newKeys = Object.keys(newObject);
            for (const key in object) {
                if (!newKeys.includes(key))
                    delete object[key];
            }
        });
    });
    return object;
}
