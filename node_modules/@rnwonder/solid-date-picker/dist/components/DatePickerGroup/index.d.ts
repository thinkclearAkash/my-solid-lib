import { Accessor, JSX, Setter } from "solid-js";
import { RnClassName, DatePickerOnChange, DatePickerType, PickerInputJSX, PickerValue } from "../../interface/general";
import { DatePickerProps } from "../DatePicker";
import { IPopOverPositionX, IPopOverPositionY } from "../Popover";
export interface DatePickerInputSJProps extends Omit<DatePickerProps, "type" | "value" | "setAllowedComponents" | "close" | "handleOnChange" | "showSelectorTwo" | "setShowSelectorTwo" | "setSelectorTwoProps" | "selectorTwoProps">, Pick<RnClassName, "inputWrapperClass" | "inputClass"> {
    type?: DatePickerType;
    value?: Accessor<PickerValue>;
    setValue?: Setter<PickerValue>;
    onChange?: (data: DatePickerOnChange) => void;
    componentsToAllowOutsideClick?: Array<HTMLElement>;
    renderInput?: PickerInputJSX;
    pickerPositionX?: IPopOverPositionX;
    pickerPositionY?: IPopOverPositionY;
    placeholder?: string;
    onClose?: () => void;
    onOpen?: () => void;
    inputProps?: JSX.InputHTMLAttributes<HTMLInputElement>;
    inputLabel?: Accessor<string>;
    inputWrapperWidth?: JSX.CSSProperties["width"];
    multipleDatesSeparator?: string;
    rangeDatesSeparator?: string;
    alwaysShowRangeStartYear?: boolean;
    formatInputLabel?: string;
    formatInputLabelRangeStart?: string;
    formatInputLabelRangeEnd?: string;
    noButtonAnimation?: boolean;
}
export declare const DatePickerGroup: (props: DatePickerInputSJProps) => JSX.Element;
