import { IPopOverPositionX, IPopOverPositionY } from "../Popover";
import { ITimeAnalogGroupProps } from "../TimeAnalogGroup";
import { TimeInputJSX, TimeValue } from "../../interface/general";
import { Accessor, JSX, Setter } from "solid-js";
interface ITimeAnalogPickerProps extends Omit<ITimeAnalogGroupProps, "handleTimeChange" | "value" | "close" | "setIsShown"> {
    value?: Accessor<TimeValue>;
    setValue?: Setter<TimeValue>;
    onClose?: () => void;
    onOpen?: () => void;
    inputLabel?: Accessor<string>;
    placeholder?: string;
    inputClass?: string;
    inputWrapperClass?: string;
    renderInput?: TimeInputJSX;
    pickerPositionX?: IPopOverPositionX;
    pickerPositionY?: IPopOverPositionY;
    inputProps?: JSX.InputHTMLAttributes<HTMLInputElement>;
    inputWrapperWidth?: JSX.CSSProperties["width"];
    zIndex?: number;
    noButtonAnimation?: boolean;
}
declare const TimeAnalogPicker: (props: ITimeAnalogPickerProps) => JSX.Element;
export default TimeAnalogPicker;
