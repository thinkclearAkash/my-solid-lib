import { Accessor } from "solid-js";
export interface UseControlledProps<T = unknown> {
    /**
     * Holds the component value when it's controlled.
     */
    controlled: Accessor<T | undefined>;
    /**
     * The default value when uncontrolled.
     */
    default: Accessor<T | undefined>;
    /**
     * The component name displayed in warnings.
     */
    name: string;
    /**
     * The name of the state variable displayed in warnings.
     */
    state?: string;
}
export default function useControlled<T>(props: UseControlledProps<T>): readonly [Accessor<T | undefined>, (newValue: T) => void];
//# sourceMappingURL=useControlled.d.ts.map