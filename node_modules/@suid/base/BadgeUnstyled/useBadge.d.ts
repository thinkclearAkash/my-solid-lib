import BadgeUnstyledProps from "./BadgeUnstyledProps";
export interface UseBadgeProps {
    anchorOrigin: BadgeUnstyledProps["anchorOrigin"];
    badgeContent?: BadgeUnstyledProps["badgeContent"];
    invisible: BadgeUnstyledProps["invisible"];
    max: BadgeUnstyledProps["max"];
    showZero: BadgeUnstyledProps["showZero"];
    variant: BadgeUnstyledProps["variant"];
}
export declare function useBadgeInvisibleMemo(props: UseBadgeProps): import("solid-js").Accessor<boolean | undefined>;
export default function useBadge(inProps: UseBadgeProps): {
    max: number;
    anchorOrigin: import("./BadgeUnstyledProps").BadgeOrigin | {
        readonly vertical: "top";
        readonly horizontal: "right";
    };
    variant: string;
    badgeContent?: import("solid-js").JSX.Element;
    readonly invisible: boolean | undefined;
    readonly displayValue: string | number | boolean | Node | import("solid-js").JSX.ArrayElement | null | undefined;
};
//# sourceMappingURL=useBadge.d.ts.map