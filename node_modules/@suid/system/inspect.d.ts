import { Component, JSX } from "solid-js";
export declare const $INSPECT: unique symbol;
export type ComponentObject<T = any> = {
    Component: Component<T>;
    props: T;
};
export type InspectResult = JSX.Element | ComponentObject;
export declare function inspect(fn: () => JSX.Element): InspectResult[];
export declare function componentTrap<T>(fn: Component<T>): Component<T>;
export declare function isComponentObject(input: unknown): input is ComponentObject;
export declare function isComponentObject<T>(input: unknown, component: Component<T>): input is ComponentObject<T>;
export declare function resolveChildren(children: any): unknown;
export declare function inspectChildren(fn: () => any): import("solid-js").Accessor<InspectResult[]>;
//# sourceMappingURL=inspect.d.ts.map