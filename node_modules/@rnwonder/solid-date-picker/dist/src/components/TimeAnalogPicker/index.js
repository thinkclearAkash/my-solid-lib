import { createComponent as s, mergeProps as x, setAttribute as z, insert as y, spread as B, template as W } from "solid-js/web";
import { Popover as O } from "../Popover/index.js";
import { TimeAnalogGroup as X } from "../TimeAnalogGroup/index.js";
import { createSignal as P, Show as S } from "solid-js";
import { convert12HourTo24Hour as Y } from "../../utils/time.js";
import { createButtonAnimation as Z } from "../../hooks/createButtonAnimation.js";
import { formatHourWithLeadingZero as $, formatMinuteSecondWithLeadingZero as c } from "../../utils/format.js";
import { cn as I } from "../../utils/class.js";
var j = W('<input readonly data-scope=time-picker data-type=time-picker-input data-part=input aria-label="time picker input"type=text>'), G = W("<div class=time-picker-input-area data-scope=time-picker data-part=control>");
const Q = (e) => {
  const [A, u] = P(!1), [d, T] = P({ value: {}, label: "" });
  Z(e.noButtonAnimation);
  const H = (n, o) => {
    var p, m, l, w, h, v, g, f, V, k, b, C;
    const i = e.setValue || T;
    let t = "", r = "";
    e.allowedView || (t = `${$(n.hour)}:${c(n.minute)}`, r = o), (p = e.allowedView) != null && p.includes("hour") ? (t = `${$(n.hour)}`, r = o, ((m = e.allowedView) != null && m.includes("minute") && (n.minute || n.minute !== void 0) || (l = e.allowedView) != null && l.includes("second") && (n.second || n.second !== void 0)) && (t += ":")) : ((w = e.allowedView) != null && w.includes("minute") && !((h = e.allowedView) != null && h.includes("second")) && (r = n.minute === 1 ? "min" : "mins"), (v = e.allowedView) != null && v.includes("second") && !((g = e.allowedView) != null && g.includes("minute")) && (r = n.second === 1 ? "sec" : "secs"), (f = e.allowedView) != null && f.includes("second") && ((V = e.allowedView) != null && V.includes("minute")) && (r = n.second === 1 ? "sec" : "secs")), (k = e.allowedView) != null && k.includes("minute") && (t += `${c(n.minute)}`, (b = e.allowedView) != null && b.includes("second") && (n.second || n.second !== void 0) && (t += ":")), (C = e.allowedView) != null && C.includes("second") && (t += `${c(n.second)}`), t += ` ${r}`, i({ value: { ...n, hour: n.hour !== void 0 ? Y(n.hour, o) : void 0 }, label: t });
  }, L = () => {
    u(!0);
  }, a = ((n) => {
    if (n)
      return typeof n == "function" ? n({ value: e.value || d, showTime: L }) : n;
  })(e.renderInput);
  return s(O, { get isShown() {
    return A();
  }, setIsShown: u, handleChildrenClick: a ? () => {
  } : void 0, onClose: () => {
    var n;
    (n = e.onClose) == null || n.call(e);
  }, onOpen: () => {
    var n;
    (n = e.onOpen) == null || n.call(e);
  }, content: ({ close: n }) => s(X, x(e, { get value() {
    var o, i;
    return ((i = (o = e.value) == null ? void 0 : o.call(e)) == null ? void 0 : i.value) || d().value;
  }, handleTimeChange: H, close: n, setIsShown: u })), get positionX() {
    return e.pickerPositionX;
  }, get positionY() {
    return e.pickerPositionY;
  }, get zIndex() {
    return e.zIndex;
  }, get width() {
    return e.inputWrapperWidth;
  }, get className() {
    return I(e.inputWrapperClass, "time-picker-input-wrapper");
  }, get children() {
    var n = G();
    return z(n, "data-time-picker-input-area", !0), y(n, s(S, { when: a, keyed: !0, children: a }), null), y(n, s(S, { when: !a, keyed: !0, get children() {
      var o = j();
      return B(o, x({ get placeholder() {
        return e.placeholder;
      }, get value() {
        var i, t, r;
        return ((i = e.inputLabel) == null ? void 0 : i.call(e)) || ((r = (t = e.value) == null ? void 0 : t.call(e)) == null ? void 0 : r.label) || d().label;
      } }, () => ({ ...e.inputProps, class: void 0 }), { get class() {
        var i;
        return I("time-picker-input rn-w-full rn-px-1", (i = e.inputProps) == null ? void 0 : i.class, e.inputClass);
      } }), !1, !1), o;
    } }), null), n;
  } });
};
export {
  Q as default
};
