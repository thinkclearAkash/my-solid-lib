import { onCleanup as i } from "solid-js";
const d = (e, t, n) => {
  const a = new Date(t, e, 1 - ((n == null ? void 0 : n.weekStartDay) || 0)).getDay(), s = new Date(t, e + 1, 0).getDate(), o = [], l = e === 0 ? 11 : e - 1, u = new Date(l === 11 ? t - 1 : t, l + 1, 0).getDate();
  let c = u - a + 1;
  c === u + 1 && (c = 1);
  for (let r = 0; r < a; r++)
    o.push({ value: c + r, month: "prev" });
  for (let r = 1; r <= s; r++)
    o.push({ value: r, month: "current" });
  const g = 35 - o.length >= 0 ? 35 - o.length : 42 - o.length;
  for (let r = 1; r <= g; r++) {
    const h = r;
    o.push({ value: h, month: "next" });
  }
  return o;
}, D = () => {
  const e = /* @__PURE__ */ new Date();
  return { day: e.getDate(), month: e.getMonth(), year: e.getFullYear() };
};
function f(e, t) {
  const n = [];
  for (let a = t; a >= e; a--)
    n.push(a);
  return n;
}
const p = (/* @__PURE__ */ new Date()).getFullYear(), v = (e, t) => t === "prev" ? e === 0 ? 11 : e - 1 : t === "next" ? e === 11 ? 0 : e + 1 : e, k = (e, t, n) => n === "prev" ? t === 0 ? e - 1 : e : n === "next" && t === 11 ? e + 1 : e, w = (e, t) => ({ year: t === 0 ? e - 1 : e, month: t === 0 ? 11 : t - 1 }), x = (e, t) => ({ year: t === 11 ? e + 1 : e, month: t === 11 ? 0 : t + 1 }), S = (e, t = "long", n) => new Date(2e3, e, 1).toLocaleString(n ?? "en", { month: t });
function Y(e, t) {
  const n = [];
  for (let a = 0; a < e.length; a += t)
    n.push(e.slice(a, a + t));
  return n;
}
const A = ({ startDay: e, month: t, year: n, type: a, setStartDay: s }) => {
  if (a === "single") {
    const o = { ...e || D(), ...t !== void 0 && { month: t }, ...n !== void 0 && { year: n } };
    return s == null || s(o), { selectedDate: o, type: a };
  }
  return null;
}, M = (e, t) => {
  const n = (a) => {
    e && !e.contains(a.target) && t(a);
  };
  document.addEventListener("click", n), i(() => {
    document.removeEventListener("click", n);
  });
};
export {
  Y as breakArrayIntoSubArrays,
  M as clickOutside,
  p as currentYear,
  f as generateYearsArray,
  v as getDatePickerRefactoredMonth,
  k as getDatePickerRefactoredYear,
  d as getMonthDaysArray,
  S as getMonthName,
  A as getOnChangeSingleData,
  x as getRefactoredNextDate,
  w as getRefactoredPrevDate,
  D as getToday
};
