import { getSSRElementAttr, setSSRElementAttr } from "./ssr";
export function isSSRElement(input) {
    return (!!input &&
        typeof input === "object" &&
        "t" in input &&
        typeof input.t === "string" &&
        /^<[a-z]/i.test(input.t.trimStart()));
}
export function isBrowserElement(input) {
    return globalThis.Element && input instanceof Element;
}
export function isElement(input) {
    return isBrowserElement(input) || isSSRElement(input);
}
export function getElementAttr(input, name) {
    if (isBrowserElement(input)) {
        return input.getAttribute(name) ?? undefined;
    }
    else if (isSSRElement(input)) {
        return getSSRElementAttr(input.t, name);
    }
}
export function setElementAttr(input, name, value) {
    if (isBrowserElement(input)) {
        input.setAttribute(name, value);
    }
    else if (isSSRElement(input)) {
        setSSRElementAttr(input, name, value);
    }
}
export function hasElementClass(input, name) {
    return getElementAttr(input, "class")?.split(" ").includes(name) || false;
}
export function addElementClass(input, value) {
    if (isBrowserElement(input)) {
        input.classList.add(...value.split(" "));
    }
    else {
        setSSRElementAttr(input, "class", (prev) => prev
            ? prev.split(" ").includes(value)
                ? value
                : `${prev} ${value}`
            : value);
    }
}
export function isSuidElement(input, component) {
    return (typeof component.__suid === "string" &&
        hasElementClass(input, component.toString().slice(1)));
}
