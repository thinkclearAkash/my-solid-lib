import { getDatePickerRefactoredYear as y, getDatePickerRefactoredMonth as h } from "./generate.js";
import { convertDateToDateObject as i } from "./format.js";
import { isDateRangeDisabled as f, isDateRangeEnabled as l } from "./general.js";
const b = ({ year: g, day: r, startDay: e, endDay: n, disabledDays: s, month: m, hover: D, hoverEndDay: u, enabledDays: d }) => {
  if ((e && n || !e && !n) && !D && !u)
    return { start: { year: y(g(), m(), r.month), month: h(m(), r.month), day: r.value }, end: void 0, initial: !0 };
  if (e && !n) {
    const a = new Date(e == null ? void 0 : e.year, e == null ? void 0 : e.month, e == null ? void 0 : e.day), t = new Date(y(g(), m(), r.month), h(m(), r.month), r.value);
    if (a.getTime() === t.getTime())
      return { start: e };
    if (a.getTime() < t.getTime() && (s && f(a, t, s) || d && l(a, t, d)))
      return D ? { start: e } : { start: i(t), initial: !0 };
    if (a.getTime() > t.getTime() && (s && f(a, t, s) || d && l(t, a, d)))
      return D ? { start: e } : { start: i(t), initial: !0 };
    if (a.getTime() < t.getTime())
      return { end: i(t), start: e };
    if (a.getTime() > t.getTime())
      return { start: i(t), end: i(a) };
  }
  return { start: e, end: n };
};
export {
  b as handleDateRange
};
