import { memo as a, createComponent as s, mergeProps as c } from "solid-js/web";
import { createSignal as h, onMount as u } from "solid-js";
import { Selector as y } from "../Selector/index.js";
import { SelectorTriggerButton as g } from "../SelectorTriggerButton/index.js";
const C = (t) => {
  const [e, m] = h([]);
  u(() => {
    const o = Array.from({ length: 12 }, (r, i) => new Date(0, i + 1, 0).toLocaleDateString(t.locale || "en", { month: t != null && t.monthSelectorFormat ? t.monthSelectorFormat : t.monthSelectorType === "compact-dropdown" ? "short" : "long" }));
    m(o);
  });
  const p = () => {
    var o, r;
    (o = t.setSelectorTwoProps) == null || o.call(t, { ...t, optionsArray: e(), option: t.month, setOption: t.setMonth, ref: t.ref, attributes: { "data-month": "true" }, className: "month-selector-option", zIndex: t.zIndex, primaryTextColor: t.primaryTextColor, primaryColor: t.primaryColor, twoMonthsDisplay: t.twoMonthsDisplay }), (r = t.setShowSelectorTwo) == null || r.call(t, !0);
  };
  return a((n = a(() => t.monthSelectorType === "compact-dropdown"), () => n() ? s(y, c(t, { get optionsArray() {
    return e();
  }, get option() {
    return t.month;
  }, get setOption() {
    return t.setMonth;
  }, ref(o) {
    var r = t.ref;
    typeof r == "function" ? r(o) : t.ref = o;
  }, get gridTemplateColumnsNo() {
    return t.monthSelectorFormat === "long" ? "3" : "6";
  }, attributes: { "data-month": "true" }, className: "month-selector-option", get zIndex() {
    return t.zIndex;
  }, get primaryColor() {
    return t.primaryColor;
  }, get primaryTextColor() {
    return t.primaryTextColor;
  }, get twoMonthsDisplay() {
    return t.twoMonthsDisplay;
  } })) : s(g, { get option() {
    return t.month;
  }, get optionsArray() {
    return e();
  }, type: "full-size", get isOpen() {
    var o;
    return ((o = t.showSelectorTwo) == null ? void 0 : o.call(t)) || !1;
  }, get twoMonthsDisplay() {
    return t.twoMonthsDisplay;
  }, onClick: p })));
  var n;
};
export {
  C as MonthSelector
};
