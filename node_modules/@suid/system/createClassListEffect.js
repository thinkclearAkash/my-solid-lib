import { createEffect } from "solid-js";
export function normalizeClassList(object) {
    const items = Array.isArray(object) ? object : [object];
    const result = {};
    for (const item of items) {
        if (typeof item === "string") {
            result[item] = true;
        }
        else if (item) {
            Object.assign(result, item);
        }
    }
    return result;
}
export function applyClassList(element, current, prev) {
    const currentMap = current ? normalizeClassList(current) : {};
    for (const name in currentMap)
        if (currentMap[name])
            element.classList.add(name);
    const prevMap = prev ? normalizeClassList(prev) : {};
    for (const name in prevMap)
        if (!currentMap[name])
            element.classList.remove(name);
    return current;
}
function createClassListEffect(element, classList) {
    createEffect((prev) => {
        const current = classList();
        return applyClassList(element.ref, current, prev);
    }, undefined);
}
export default createClassListEffect;
