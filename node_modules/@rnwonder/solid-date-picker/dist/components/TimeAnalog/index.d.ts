import { Accessor, Setter } from "solid-js";
import { TimeMeridiem, ITimePickerFormat, TimeView, TimeClassName } from "../../interface/general";
export interface ITimePickerAnalog extends TimeClassName {
    close: () => void;
    view: Accessor<TimeView>;
    setView: Setter<TimeView>;
    allowedView: TimeView[];
    value: ITimePickerFormat;
    handleNext: () => void;
    onChange?: (time: ITimePickerFormat) => void;
    meridiem: Accessor<TimeMeridiem>;
    setMeridiem: Setter<TimeMeridiem>;
    setCurrentTimeOnOpen?: boolean;
    handleTimeChange: (time: ITimePickerFormat, meridiem: TimeMeridiem) => void;
    selectedHour: Accessor<number | undefined>;
    selectedMinute: Accessor<number | undefined>;
    selectedSeconds: Accessor<number | undefined>;
    setSelectedHour: Setter<number | undefined>;
    setSelectedMinute: Setter<number | undefined>;
    setSelectedSeconds: Setter<number | undefined>;
}
export declare const TimeAnalog: (props: ITimePickerAnalog) => import("solid-js").JSX.Element;
