import { getDatePickerRefactoredMonth as s, getDatePickerRefactoredYear as h } from "./generate.js";
import { isDayTipRange as l, isDayInBetweenRange as R, checkIfItsTodayDate as C, isWeekendStatus as M, isPartOfDisabledDays as O, isMinMaxDate as P, isNotPartOfEnabledDays as k, isBeforeDate as c, compareObjectDate as g } from "./general.js";
const w = ({ year: e, month: t, endDay: n, day: a, startDay: d, customDaysClassName: y, multipleObject: m, hideOutSideDays: f, hoverRangeValue: o, minDate: p, maxDate: S, disabledDays: b, enabledDays: v }) => {
  var i;
  const u = `${e()}-${s(t(), a.month)}-${a.value}`;
  return { dayRangeEndHover: x(o, d, a, e, t), dayRangeStartEnd: (o().start || d) && (o().end || n) && (l({ year: e(), month: t(), day: a.value, dateRange: o().start || d, monthStatus: a.month }) || l({ year: e(), month: t(), day: a.value, dateRange: o().end || n, monthStatus: a.month })), dayRangeBetween: R({ year: e(), month: t(), day: a.value, startDate: o().start || d, endDate: o().end || n, monthStatus: a.month }), dayRangeStart: l({ year: e(), month: t(), day: a.value, dateRange: o().start || d, monthStatus: a.month }), dayRangeEnd: l({ year: e(), month: t(), day: a.value, dateRange: o().end || n, monthStatus: a.month }), daysCurrent: C(new Date(h(e(), t(), a.month), s(t(), a.month), a.value)) && a.month === "current", daysNotCurrentMonth: a.month !== "current", ...M({ year: e(), month: t(), day: a }), customDayClass: (i = y == null ? void 0 : y.find((r) => r.year === h(e(), t(), a.month) && r.month === s(t(), a.month) && r.day === a.value)) == null ? void 0 : i.className, isMultipleSelected: !!(m != null && m.find((r) => r.year === h(e(), t(), a.month) && r.month === s(t(), a.month) && r.day === a.value)), hidden: !!f && a.month !== "current", disabled: O({ disabledDays: b, day: a, month: t(), year: e() }) || P({ day: a, month: t, year: e, minDate: p, maxDate: S }) || k({ enabledDays: v, day: a, month: t(), year: e() }), date: u, dateValue: u };
}, x = (e, t, n, a, d) => {
  var y, m;
  return !!((y = e().end) != null && y.day) && !!((m = e().start) != null && m.day) && !!(t != null && t.day) && (c(e().start, t) ? g(e().start, { year: h(a(), d(), n.month), month: s(d(), n.month), day: n.value }) : !!c(t, e().end) && g(e().end, { year: h(a(), d(), n.month), month: s(d(), n.month), day: n.value }));
};
export {
  w as applyDateRangeProps
};
