import { Theme } from "./createTheme";
type PropReturn<V> = (value: Exclude<V, undefined>, theme: Theme) => Record<string, any>;
declare function createSystemProps(): {
    typography: PropReturn<string>;
    fontFamily: PropReturn<import("csstype").Property.FontFamily | undefined>;
    fontSize: PropReturn<import("csstype").Property.FontSize<string | number> | undefined>;
    fontStyle: PropReturn<import("csstype").Property.FontStyle | undefined>;
    fontWeight: PropReturn<import("csstype").Property.FontWeight | undefined>;
    letterSpacing: PropReturn<import("csstype").Property.LetterSpacing<string | number> | undefined>;
    lineHeight: PropReturn<import("csstype").Property.LineHeight<string | number> | undefined>;
    textAlign: PropReturn<import("csstype").Property.TextAlign | undefined>;
    textTransform: PropReturn<import("csstype").Property.TextTransform | undefined>;
    m: PropReturn<import("csstype").Property.Margin<string | number> | undefined>;
    mt: PropReturn<import("csstype").Property.MarginTop<string | number> | undefined>;
    mr: PropReturn<import("csstype").Property.MarginRight<string | number> | undefined>;
    mb: PropReturn<import("csstype").Property.MarginBottom<string | number> | undefined>;
    ml: PropReturn<import("csstype").Property.MarginLeft<string | number> | undefined>;
    mx: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    my: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    margin: PropReturn<import("csstype").Property.Margin<string | number> | undefined>;
    marginTop: PropReturn<import("csstype").Property.MarginTop<string | number> | undefined>;
    marginRight: PropReturn<import("csstype").Property.MarginRight<string | number> | undefined>;
    marginBottom: PropReturn<import("csstype").Property.MarginBottom<string | number> | undefined>;
    marginLeft: PropReturn<import("csstype").Property.MarginLeft<string | number> | undefined>;
    marginX: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    marginY: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    marginInline: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    marginInlineStart: PropReturn<import("csstype").Property.MarginInlineStart<string | number> | undefined>;
    marginInlineEnd: PropReturn<import("csstype").Property.MarginInlineEnd<string | number> | undefined>;
    marginBlock: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    marginBlockStart: PropReturn<import("csstype").Property.MarginBlockStart<string | number> | undefined>;
    marginBlockEnd: PropReturn<import("csstype").Property.MarginBlockEnd<string | number> | undefined>;
    p: PropReturn<import("csstype").Property.Padding<string | number> | undefined>;
    pt: PropReturn<import("csstype").Property.PaddingTop<string | number> | undefined>;
    pr: PropReturn<import("csstype").Property.PaddingRight<string | number> | undefined>;
    pb: PropReturn<import("csstype").Property.PaddingBottom<string | number> | undefined>;
    pl: PropReturn<import("csstype").Property.PaddingLeft<string | number> | undefined>;
    px: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    py: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    padding: PropReturn<import("csstype").Property.Padding<string | number> | undefined>;
    paddingTop: PropReturn<import("csstype").Property.PaddingTop<string | number> | undefined>;
    paddingRight: PropReturn<import("csstype").Property.PaddingRight<string | number> | undefined>;
    paddingBottom: PropReturn<import("csstype").Property.PaddingBottom<string | number> | undefined>;
    paddingLeft: PropReturn<import("csstype").Property.PaddingLeft<string | number> | undefined>;
    paddingX: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    paddingY: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    paddingInline: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    paddingInlineStart: PropReturn<import("csstype").Property.PaddingInlineStart<string | number> | undefined>;
    paddingInlineEnd: PropReturn<import("csstype").Property.PaddingInlineEnd<string | number> | undefined>;
    paddingBlock: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    paddingBlockStart: PropReturn<import("csstype").Property.PaddingBlockStart<string | number> | undefined>;
    paddingBlockEnd: PropReturn<import("csstype").Property.PaddingBlockEnd<string | number> | undefined>;
    border: PropReturn<import("csstype").Property.Border<string | number> | undefined>;
    borderTop: PropReturn<import("csstype").Property.BorderTop<string | number> | undefined>;
    borderRight: PropReturn<import("csstype").Property.BorderRight<string | number> | undefined>;
    borderBottom: PropReturn<import("csstype").Property.BorderBottom<string | number> | undefined>;
    borderLeft: PropReturn<import("csstype").Property.BorderLeft<string | number> | undefined>;
    borderColor: PropReturn<import("csstype").Property.BorderColor | undefined>;
    borderTopColor: PropReturn<import("csstype").Property.BorderTopColor | undefined>;
    borderRightColor: PropReturn<import("csstype").Property.BorderRightColor | undefined>;
    borderBottomColor: PropReturn<import("csstype").Property.BorderBottomColor | undefined>;
    borderLeftColor: PropReturn<import("csstype").Property.BorderLeftColor | undefined>;
    borderRadius: PropReturn<import("csstype").Property.BorderRadius<string | number> | undefined>;
    width: PropReturn<import("csstype").Property.Width<string | number> | undefined>;
    maxWidth: PropReturn<import("csstype").Property.MaxWidth<string | number> | undefined>;
    minWidth: PropReturn<import("csstype").Property.MinWidth<string | number> | undefined>;
    height: PropReturn<import("csstype").Property.Height<string | number> | undefined>;
    maxHeight: PropReturn<import("csstype").Property.MaxHeight<string | number> | undefined>;
    minHeight: PropReturn<import("csstype").Property.MinHeight<string | number> | undefined>;
    boxSizing: PropReturn<import("csstype").Property.BoxSizing | undefined>;
    color: PropReturn<import("csstype").Property.Color | undefined>;
    bgcolor: PropReturn<import("csstype").Property.BackgroundColor | undefined>;
    backgroundColor: PropReturn<import("csstype").Property.BackgroundColor | undefined>;
    position: PropReturn<import("csstype").Property.Position | undefined>;
    zIndex: PropReturn<import("csstype").Property.ZIndex | undefined>;
    top: PropReturn<import("csstype").Property.Top<string | number> | undefined>;
    right: PropReturn<import("csstype").Property.Right<string | number> | undefined>;
    bottom: PropReturn<import("csstype").Property.Bottom<string | number> | undefined>;
    left: PropReturn<import("csstype").Property.Left<string | number> | undefined>;
    gap: PropReturn<import("csstype").Property.Gap<string | number> | undefined>;
    columnGap: PropReturn<import("csstype").Property.ColumnGap<string | number> | undefined>;
    rowGap: PropReturn<import("csstype").Property.RowGap<string | number> | undefined>;
    gridColumn: PropReturn<import("csstype").Property.GridColumn | undefined>;
    gridRow: PropReturn<import("csstype").Property.GridRow | undefined>;
    gridAutoFlow: PropReturn<import("csstype").Property.GridAutoFlow | undefined>;
    gridAutoColumns: PropReturn<import("csstype").Property.GridAutoColumns<string | number> | undefined>;
    gridAutoRows: PropReturn<import("csstype").Property.GridAutoRows<string | number> | undefined>;
    gridTemplateColumns: PropReturn<import("csstype").Property.GridTemplateColumns<string | number> | undefined>;
    gridTemplateRows: PropReturn<import("csstype").Property.GridTemplateRows<string | number> | undefined>;
    gridTemplateAreas: PropReturn<import("csstype").Property.GridTemplateAreas | undefined>;
    gridArea: PropReturn<import("csstype").Property.GridArea | undefined>;
    flexBasis: PropReturn<import("csstype").Property.FlexBasis<string | number> | undefined>;
    flexDirection: PropReturn<import("csstype").Property.FlexDirection | undefined>;
    flexWrap: PropReturn<import("csstype").Property.FlexWrap | undefined>;
    justifyContent: PropReturn<import("csstype").Property.JustifyContent | undefined>;
    alignItems: PropReturn<import("csstype").Property.AlignItems | undefined>;
    alignContent: PropReturn<import("csstype").Property.AlignContent | undefined>;
    order: PropReturn<import("csstype").Property.Order | undefined>;
    flex: PropReturn<import("csstype").Property.Flex<string | number> | undefined>;
    flexGrow: PropReturn<import("csstype").Property.FlexGrow | undefined>;
    flexShrink: PropReturn<import("csstype").Property.FlexShrink | undefined>;
    alignSelf: PropReturn<import("csstype").Property.AlignSelf | undefined>;
    justifyItems: PropReturn<import("csstype").Property.JustifyItems | undefined>;
    justifySelf: PropReturn<import("csstype").Property.JustifySelf | undefined>;
    displayPrint: PropReturn<string>;
    displayRaw: PropReturn<import("csstype").Property.Display | undefined>;
    overflow: PropReturn<import("csstype").Property.Overflow | undefined>;
    textOverflow: PropReturn<import("csstype").Property.TextOverflow | undefined>;
    visibility: PropReturn<import("csstype").Property.Visibility | undefined>;
    whiteSpace: PropReturn<import("csstype").Property.WhiteSpace | undefined>;
};
export declare function createSystemDisplayProps(): {
    displayPrint: PropReturn<string>;
    displayRaw: PropReturn<import("csstype").Property.Display | undefined>;
    overflow: PropReturn<import("csstype").Property.Overflow | undefined>;
    textOverflow: PropReturn<import("csstype").Property.TextOverflow | undefined>;
    visibility: PropReturn<import("csstype").Property.Visibility | undefined>;
    whiteSpace: PropReturn<import("csstype").Property.WhiteSpace | undefined>;
};
export declare function createSystemFlexboxProps(): {
    flexBasis: PropReturn<import("csstype").Property.FlexBasis<string | number> | undefined>;
    flexDirection: PropReturn<import("csstype").Property.FlexDirection | undefined>;
    flexWrap: PropReturn<import("csstype").Property.FlexWrap | undefined>;
    justifyContent: PropReturn<import("csstype").Property.JustifyContent | undefined>;
    alignItems: PropReturn<import("csstype").Property.AlignItems | undefined>;
    alignContent: PropReturn<import("csstype").Property.AlignContent | undefined>;
    order: PropReturn<import("csstype").Property.Order | undefined>;
    flex: PropReturn<import("csstype").Property.Flex<string | number> | undefined>;
    flexGrow: PropReturn<import("csstype").Property.FlexGrow | undefined>;
    flexShrink: PropReturn<import("csstype").Property.FlexShrink | undefined>;
    alignSelf: PropReturn<import("csstype").Property.AlignSelf | undefined>;
    justifyItems: PropReturn<import("csstype").Property.JustifyItems | undefined>;
    justifySelf: PropReturn<import("csstype").Property.JustifySelf | undefined>;
};
export declare function createSystemGridProps(): {
    gap: PropReturn<import("csstype").Property.Gap<string | number> | undefined>;
    columnGap: PropReturn<import("csstype").Property.ColumnGap<string | number> | undefined>;
    rowGap: PropReturn<import("csstype").Property.RowGap<string | number> | undefined>;
    gridColumn: PropReturn<import("csstype").Property.GridColumn | undefined>;
    gridRow: PropReturn<import("csstype").Property.GridRow | undefined>;
    gridAutoFlow: PropReturn<import("csstype").Property.GridAutoFlow | undefined>;
    gridAutoColumns: PropReturn<import("csstype").Property.GridAutoColumns<string | number> | undefined>;
    gridAutoRows: PropReturn<import("csstype").Property.GridAutoRows<string | number> | undefined>;
    gridTemplateColumns: PropReturn<import("csstype").Property.GridTemplateColumns<string | number> | undefined>;
    gridTemplateRows: PropReturn<import("csstype").Property.GridTemplateRows<string | number> | undefined>;
    gridTemplateAreas: PropReturn<import("csstype").Property.GridTemplateAreas | undefined>;
    gridArea: PropReturn<import("csstype").Property.GridArea | undefined>;
};
export declare function createSystemPositionProps(): {
    position: PropReturn<import("csstype").Property.Position | undefined>;
    zIndex: PropReturn<import("csstype").Property.ZIndex | undefined>;
    top: PropReturn<import("csstype").Property.Top<string | number> | undefined>;
    right: PropReturn<import("csstype").Property.Right<string | number> | undefined>;
    bottom: PropReturn<import("csstype").Property.Bottom<string | number> | undefined>;
    left: PropReturn<import("csstype").Property.Left<string | number> | undefined>;
};
export declare function createSystemPaletteProps(): {
    color: PropReturn<import("csstype").Property.Color | undefined>;
    bgcolor: PropReturn<import("csstype").Property.BackgroundColor | undefined>;
    backgroundColor: PropReturn<import("csstype").Property.BackgroundColor | undefined>;
};
export declare function createSystemSizingProps(): {
    width: PropReturn<import("csstype").Property.Width<string | number> | undefined>;
    maxWidth: PropReturn<import("csstype").Property.MaxWidth<string | number> | undefined>;
    minWidth: PropReturn<import("csstype").Property.MinWidth<string | number> | undefined>;
    height: PropReturn<import("csstype").Property.Height<string | number> | undefined>;
    maxHeight: PropReturn<import("csstype").Property.MaxHeight<string | number> | undefined>;
    minHeight: PropReturn<import("csstype").Property.MinHeight<string | number> | undefined>;
    boxSizing: PropReturn<import("csstype").Property.BoxSizing | undefined>;
};
export declare function createSystemBorderProps(): {
    border: PropReturn<import("csstype").Property.Border<string | number> | undefined>;
    borderTop: PropReturn<import("csstype").Property.BorderTop<string | number> | undefined>;
    borderRight: PropReturn<import("csstype").Property.BorderRight<string | number> | undefined>;
    borderBottom: PropReturn<import("csstype").Property.BorderBottom<string | number> | undefined>;
    borderLeft: PropReturn<import("csstype").Property.BorderLeft<string | number> | undefined>;
    borderColor: PropReturn<import("csstype").Property.BorderColor | undefined>;
    borderTopColor: PropReturn<import("csstype").Property.BorderTopColor | undefined>;
    borderRightColor: PropReturn<import("csstype").Property.BorderRightColor | undefined>;
    borderBottomColor: PropReturn<import("csstype").Property.BorderBottomColor | undefined>;
    borderLeftColor: PropReturn<import("csstype").Property.BorderLeftColor | undefined>;
    borderRadius: PropReturn<import("csstype").Property.BorderRadius<string | number> | undefined>;
};
export declare function createSystemTypographyProps(): {
    typography: PropReturn<string>;
    fontFamily: PropReturn<import("csstype").Property.FontFamily | undefined>;
    fontSize: PropReturn<import("csstype").Property.FontSize<string | number> | undefined>;
    fontStyle: PropReturn<import("csstype").Property.FontStyle | undefined>;
    fontWeight: PropReturn<import("csstype").Property.FontWeight | undefined>;
    letterSpacing: PropReturn<import("csstype").Property.LetterSpacing<string | number> | undefined>;
    lineHeight: PropReturn<import("csstype").Property.LineHeight<string | number> | undefined>;
    textAlign: PropReturn<import("csstype").Property.TextAlign | undefined>;
    textTransform: PropReturn<import("csstype").Property.TextTransform | undefined>;
};
export declare function createSystemSpacingProps(): {
    m: PropReturn<import("csstype").Property.Margin<string | number> | undefined>;
    mt: PropReturn<import("csstype").Property.MarginTop<string | number> | undefined>;
    mr: PropReturn<import("csstype").Property.MarginRight<string | number> | undefined>;
    mb: PropReturn<import("csstype").Property.MarginBottom<string | number> | undefined>;
    ml: PropReturn<import("csstype").Property.MarginLeft<string | number> | undefined>;
    mx: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    my: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    margin: PropReturn<import("csstype").Property.Margin<string | number> | undefined>;
    marginTop: PropReturn<import("csstype").Property.MarginTop<string | number> | undefined>;
    marginRight: PropReturn<import("csstype").Property.MarginRight<string | number> | undefined>;
    marginBottom: PropReturn<import("csstype").Property.MarginBottom<string | number> | undefined>;
    marginLeft: PropReturn<import("csstype").Property.MarginLeft<string | number> | undefined>;
    marginX: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    marginY: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    marginInline: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    marginInlineStart: PropReturn<import("csstype").Property.MarginInlineStart<string | number> | undefined>;
    marginInlineEnd: PropReturn<import("csstype").Property.MarginInlineEnd<string | number> | undefined>;
    marginBlock: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    marginBlockStart: PropReturn<import("csstype").Property.MarginBlockStart<string | number> | undefined>;
    marginBlockEnd: PropReturn<import("csstype").Property.MarginBlockEnd<string | number> | undefined>;
    p: PropReturn<import("csstype").Property.Padding<string | number> | undefined>;
    pt: PropReturn<import("csstype").Property.PaddingTop<string | number> | undefined>;
    pr: PropReturn<import("csstype").Property.PaddingRight<string | number> | undefined>;
    pb: PropReturn<import("csstype").Property.PaddingBottom<string | number> | undefined>;
    pl: PropReturn<import("csstype").Property.PaddingLeft<string | number> | undefined>;
    px: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    py: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    padding: PropReturn<import("csstype").Property.Padding<string | number> | undefined>;
    paddingTop: PropReturn<import("csstype").Property.PaddingTop<string | number> | undefined>;
    paddingRight: PropReturn<import("csstype").Property.PaddingRight<string | number> | undefined>;
    paddingBottom: PropReturn<import("csstype").Property.PaddingBottom<string | number> | undefined>;
    paddingLeft: PropReturn<import("csstype").Property.PaddingLeft<string | number> | undefined>;
    paddingX: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    paddingY: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    paddingInline: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    paddingInlineStart: PropReturn<import("csstype").Property.PaddingInlineStart<string | number> | undefined>;
    paddingInlineEnd: PropReturn<import("csstype").Property.PaddingInlineEnd<string | number> | undefined>;
    paddingBlock: (value: unknown, theme: Theme<import(".").Breakpoint>) => Record<string, any>;
    paddingBlockStart: PropReturn<import("csstype").Property.PaddingBlockStart<string | number> | undefined>;
    paddingBlockEnd: PropReturn<import("csstype").Property.PaddingBlockEnd<string | number> | undefined>;
};
export default createSystemProps;
//# sourceMappingURL=createSystemProps.d.ts.map