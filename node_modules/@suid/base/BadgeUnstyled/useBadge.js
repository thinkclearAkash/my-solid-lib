import usePreviousProps from "@suid/utils/usePreviousProps";
import { createMemo, mergeProps } from "solid-js";
export function useBadgeInvisibleMemo(props) {
    return createMemo(() => {
        if (props.invisible === false &&
            ((props.badgeContent === 0 && !props.showZero) ||
                (props.badgeContent == null && props.variant !== "dot"))) {
            return true;
        }
        else {
            return props.invisible;
        }
    });
}
export default function useBadge(inProps) {
    const props = mergeProps({
        anchorOrigin: {
            vertical: "top",
            horizontal: "right",
        },
        invisible: false,
        max: 99,
        showZero: false,
        variant: "standard",
    }, inProps);
    const prevProps = usePreviousProps(props, [
        "anchorOrigin",
        "badgeContent",
        "max",
        "variant",
    ]);
    const invisible = useBadgeInvisibleMemo(props);
    const badge = mergeProps(() => (invisible() ? prevProps : props));
    const displayValue = () => {
        if (badge.variant !== "dot") {
            return badge.badgeContent && Number(badge.badgeContent) > badge.max
                ? `${badge.max}+`
                : badge.badgeContent;
        }
    };
    return mergeProps(badge, {
        get invisible() {
            return invisible();
        },
        get displayValue() {
            return displayValue();
        },
    });
}
